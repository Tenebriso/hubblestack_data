fifteen_min:
  - query_name: win_running_procs
    query: SELECT t.unix_time AS query_time, p.name AS process, p.pid AS process_id, p.cmdline, p.cwd, p.on_disk, p.resident_size AS mem_used, p.parent, pp.name AS parent_process, p.path, h.md5 AS md5, h.sha1 AS sha1, h.sha256 AS sha256 FROM processes AS p LEFT JOIN processes AS pp ON p.parent=pp.pid LEFT JOIN time AS t LEFT JOIN hash AS h ON p.path=h.path;
  - query_name: win_established_outbound
    query: SELECT t.unix_time AS query_time, pos.state AS connection_state, CASE pos.family WHEN 2 THEN 'ipv4' WHEN 10 THEN 'ipv6' ELSE pos.family END AS family, h.md5 AS md5, h.sha1 AS sha1, h.sha256 AS sha256, h.directory AS directory, pos.local_address AS src_connection_ip, pos.local_port AS src_connection_port, pos.remote_port AS dest_connection_port, pos.remote_address AS dest_connection_ip, p.name AS name, p.pid AS pid, p.parent AS parent_pid, pp.name AS parent_process, p.path AS file_path, f.size AS file_size, p.cmdline AS cmdline, u.uid AS uid, u.username AS username, CASE pos.protocol WHEN 6 THEN 'tcp' WHEN 17 THEN 'udp' ELSE pos.protocol END AS transport FROM process_open_sockets AS pos JOIN processes AS p ON p.pid=pos.pid LEFT JOIN processes AS pp ON p.parent=pp.pid LEFT JOIN users AS u ON p.uid=u.uid LEFT JOIN time AS t LEFT JOIN hash AS h ON h.path=p.path LEFT JOIN file AS f ON f.path=p.path WHERE NOT pos.remote_address='' AND NOT pos.remote_address='::' AND NOT pos.remote_address='::1' AND NOT pos.remote_address='0.0.0.0' AND NOT pos.remote_address='127.0.0.1' AND (pos.local_port,pos.protocol) NOT IN (SELECT lp.port, lp.protocol FROM listening_ports AS lp);
  - query_name: win_listening_procs
    query: SELECT t.unix_time AS query_time, h.md5 AS md5, p.pid AS process_id, p.name AS process, ltrim(address, ':f') AS address, port AS dest_port, p.path AS file_path, p.cmdline, p.on_disk, p.root, p.parent, pp.name AS parent_process, CASE lp.protocol WHEN 6 THEN 'tcp' WHEN 17 THEN 'udp' ELSE lp.protocol END AS transport FROM listening_ports AS lp LEFT JOIN processes AS p ON lp.pid=p.pid LEFT JOIN processes AS pp ON p.parent=pp.pid LEFT JOIN time AS t LEFT JOIN hash AS h ON h.path=p.path;
hour:
  - query_name: win_drivers
    query: SELECT t.unix_time AS query_time, d.*, h.md5 AS md5, h.sha1 AS sha1, h.sha256 AS sha256 FROM drivers AS d LEFT JOIN time AS t LEFT JOIN hash AS h ON h.path = d.image;
day:
  - query_name: win_os_info
    query: SELECT t.unix_time AS query_time, os.* FROM os_version AS os LEFT JOIN time AS t;
  - query_name: win_interface_addresses
    query: SELECT t.unix_time AS query_time, ia.interface, ia.address, id.mac FROM interface_addresses AS ia JOIN interface_details AS id ON ia.interface=id.interface LEFT JOIN time AS t WHERE NOT ia.interface='lo';
  - query_name: win_uptime
    query: SELECT t.unix_time AS query_time, total_seconds AS uptime FROM uptime LEFT JOIN time AS t;
  - query_name: win_system_info
    query: SELECT t.unix_time AS query_time, si.uuid, si.cpu_type, si.cpu_subtype, si.cpu_brand, si.cpu_physical_cores, si.cpu_logical_cores, si.hardware_vendor, si.hardware_serial, si.hardware_model, (SELECT value FROM cpuid WHERE feature = 'hypervisor') AS virtual_machine, t.local_timezone AS local_timezone FROM system_info AS si, time AS t;
  - query_name: win_programs
    query: SELECT t.unix_time AS query_time, p.* FROM programs AS p LEFT JOIN time AS t;
  - query_name: profile_version
    query: SELECT t.unix_time AS query_time, '2018-11-1' AS version FROM time AS t;
